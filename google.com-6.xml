<?xml version="1.0" encoding="UTF-8" ?>
<Module>
<ModulePrefs title="Google.com" />
<Content type="html"><![CDATA[
<!DOCTYPE html>
<html lang="en-us">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
    <title> google.com</title>
  </head>
  <body style="text-align: center">
    <canvas id="unity-canvas" width=1280 height=720 style="width: 1280px; height: 720px; background: #601527"></canvas>
    <script src="https://cdn.jsdelivr.net/gh/school-management-google/xahaz@main/Build/WebGL.loader.js"></script>
    <script>
      // CDN base url (BURAYA sen kendi repo yolunu yazacaksın)
      const cdnBase = "https://cdn.jsdelivr.net/gh/school-management-google/xahaz@main/Build/";

      // Ortak birleştirme fonksiyonu
      async function mergeParts(baseName, count) {
        let parts = [];
        for (let i = 0; i < count; i++) {
          const resp = await fetch(`${cdnBase}${baseName}.part${i}`);
          const buf = await resp.arrayBuffer();
          parts.push(new Uint8Array(buf));
        }
        let totalLength = parts.reduce((sum, p) => sum + p.length, 0);
        let merged = new Uint8Array(totalLength);
        let offset = 0;
        for (let p of parts) {
          merged.set(p, offset);
          offset += p.length;
        }
        return URL.createObjectURL(new Blob([merged], { type: "application/gzip" }));
      }

      (async () => {
        // İki dosya da 3 parçaya bölünmüş durumda
        const dataUrl = await mergeParts("WebGL.data.gz", 3);
        const wasmUrl = await mergeParts("WebGL.wasm.gz", 3);

        createUnityInstance(document.querySelector("#unity-canvas"), {
          dataUrl: dataUrl,
          frameworkUrl: cdnBase + "WebGL.framework.js.js",
          codeUrl: wasmUrl,
          streamingAssetsUrl: "StreamingAssets",
          companyName: "Kulu",
          productName: "Santy is Home",
          productVersion: "0.1",
        });
      })();
    </script>
  </body>
</html>
<script defer src="https://static.itch.io/htmlgame.js" type="text/javascript"></script>


]]></Content>
</Module>